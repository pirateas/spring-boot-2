server:
  servlet:
    context-path: /springboot
  port: 8080

spring:
  profiles:
    active: @profiles.active@
    include: jdbc,redis,mq

  # json
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    locale: zh_CN

  # db
  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    hikari:
#      pool-name: HikariPool
#      # 连接池最大连接数
#      maximum-pool-size: 100
#      # 连接池中允许的最小空闲连接数
#      minimum-idle: 1
#      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放，默认:30分钟(1800000)
#      max-lifetime: 3600000
#      # 最大空闲时间（毫秒），超时则被释放，默认:10分钟(600000)
#      idle-timeout: 600000
#      # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒(30000)
#      connection-timeout: 10000
#      auto-commit: true
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池的最小空闲连接数，默认0
      min-idle: 5
      # 连接池最大连接数，默认8
      max-active: 200
      # 获取连接时最大等待时间，单位毫秒，默认-1
      max-wait: 3000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。默认false。
      # 建议配置为true，不影响性能，并且保证安全性。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认true
      test-on-borrow: false
      # 间隔多久进行一次检测，检测需要关闭的空闲连接，单位:毫秒，默认60000（1分钟）
      time-between-eviction-runs-millis: 3000
      # 连接的最小空闲的时间，单位:毫秒
      # 连接保持空闲而不被驱逐的最小时间，单位:毫秒，默认1000L * 60L * 30L（30分钟）
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      # 是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
      pool-prepared-statements: false
      # 开启poolPreparedStatements后生效
      max-pool-prepared-statement-per-connection-size: 20
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 配置扩展插件，常用的插件有=>stat:监控统计  log4j2:日志  wall:防御sql注入
      filters: stat,wall,log4j2
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=100
      filter:
        stat:
          slow-sql-millis: 100
          log-slow-sql: true
          merge-sql: true
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
      # 配置监控服务器
      stat-view-servlet:
        url-pattern: /druid/*
        login-username: admin
        login-password: 123456
        reset-enable: true
      web-stat-filter:
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: '*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*'

  # cache
  cache:
    type: REDIS
    # @Cacheable使用
    redis:
      use-key-prefix: true
      key-prefix: @profiles.active@
      cache-null-values: false
  # redis
  redis:
    timeout: 3000ms
    jedis:
      pool:
        # 最大连接数
        max-active: 100
        # 最大空闲数
        max-idle: 8
        # 最小空闲数
        min-idle: 0
        # 最大等待时间
        max-wait: 3000ms

# mybatis
mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存。default:true
    cache-enabled: false
    use-generated-keys: true
    auto-mapping-behavior: FULL
    # 字段驼峰转换
    map-underscore-to-camel-case: true
    # 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。
    default-executor-type: REUSE

logging:
  config: classpath:log4j2.xml

image:
  path:
    # 头像地址
    avatar: /avatar/

